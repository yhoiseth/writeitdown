<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Post;
use AppBundle\Entity\PostRole;
use AppBundle\Entity\User;
use Doctrine\ORM\EntityRepository;

/**
 * PostRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class PostRepository extends EntityRepository
{
    /**
     * @param string $roleType
     * @param Post $post
     * @param User $user
     */
    public function addRole(string $roleType, Post $post, User $user)
    {
        $role = new PostRole();
        $role->setType($roleType);
        $role->setPost($post);
        $role->setUser($user);

        $entityManager = $this->getEntityManager();
        $entityManager->persist($role);
        $entityManager->flush();
    }

    /**
     * @param Post $post
     * @return User
     */
    public function getOwner(Post $post): User
    {
        $entityManager = $this->getEntityManager();
        $userRepository = $entityManager->getRepository('AppBundle:User');

        return $userRepository
            ->createQueryBuilder('user')
            ->join('user.postRoles', 'role')
            ->where('role.post = :post')
            ->andWhere('role.type = :roleType')
            ->setParameter('post', $post)
            ->setParameter('roleType', PostRole::TYPE_OWNER)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }

    /**
     * @param string $slug
     * @param User $owner
     * @return Post|null
     */
    public function getPostBySlugAndOwner(string $slug, User $owner)
    {
        return $this
            ->createQueryBuilder('post')
            ->join('post.roles', 'role')
            ->where('post.slug = :slug')
            ->andWhere('role.user = :user')
            ->andWhere('role.type = :roleType')
            ->setParameter('slug', $slug)
            ->setParameter('user', $owner)
            ->setParameter('roleType', PostRole::TYPE_OWNER)
            ->getQuery()
            ->getOneOrNullResult()
        ;
    }
}
